package StringCalculator.Calculator;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import StringCalculator.Calculator.NegativeNumberException;

public class StringCalculator {

	
	public int add(String numbers) {
		
		String delim = ",";
		int result =0;
		List<String> linesOfInput = new ArrayList<String>();
		if(numbers.contains("\n")) {
			linesOfInput =  Arrays.asList(numbers.split("\n"));
		}
		if(numbers.contains("//")) {
			delim = numbers.substring(2, 3);
			numbers = numbers.substring(3);
		}
		
			
		try {
			if(linesOfInput.size() == 0) {
				linesOfInput.add(numbers);
			}
			for(String s : linesOfInput) {
				inputList = Arrays.asList(s.split(delim));
			System.out.println("Input length "+inputList.size());
			 result = performAddOperation(inputList);
			}
			return result;
		}
		
		catch(Exception e) {
			System.out.println("Exception occured "+e.getCause());
		}
		return 0;
		
		
	}
	
	public int performAddOperation(List<String> inputList) {
		
		try {
		if(inputList.size()  >0) {
			System.out.println("checking for negative  numbers");
			List<String> negativeNumbersList = (List<String>) inputList.stream()
					
					  .filter(num -> num.contains("-"))
					  .collect(Collectors.toList());
			if(negativeNumbersList.size() > 0 ) {
				
				throw  new NegativeNumberException("Negative not allowed "+negativeNumbersList.toString());
			}
			
		}
		if(inputList.size()  < 1) {
			System.out.println("Should contain atleast one number");
			return 0;
		}
		else if(inputList.size()  == 1) {
			return Integer.parseInt(inputList.get(0));
		}
		else  if(inputList.size()  == 2)  {
			return Integer.parseInt(inputList.get(0))+ Integer.parseInt(inputList.get(1));
		}
		else
		{
			// if the input is more than 2 number
			return 0;
		}
	
	}catch(NegativeNumberException  e) {
		System.out.println(e);	
		return 0;
		}
	}
}

